name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  basic-build:
    if: github.event_name != 'release'
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: windows-amd64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: macos-arm64
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: server/

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib

      - name: Build
        working-directory: server
        run: cargo build --verbose --release --target ${{ matrix.target }}

      #   - name: Run tests
      #     working-directory: server
      #     run: cargo test --verbose --target ${{ matrix.target }}

      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          if [ "${{ runner.os }}" = "Windows" ]; then
            # 移除多余的 server/ 前缀，因为已经在 server/ 工作目录下了
            cp target/${{ matrix.target }}/release/*.exe artifacts/
          else
            # 移除多余的 server/ 前缀，因为已经在 server/ 工作目录下了
            cp target/${{ matrix.target }}/release/* artifacts/
            chmod +x artifacts/*
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          # 修改路径，因为我们在 server/ 工作目录下
          path: artifacts/

  release-build:
    if: github.event_name == 'release'
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: windows-amd64
          - target: i686-pc-windows-msvc
            os: windows-latest
            name: windows-x86
          # ... 其他所有目标 ...
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: server/

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib

      - name: Build
        working-directory: server
        run: cargo build --verbose --release --target ${{ matrix.target }}

      #   - name: Run tests
      #     working-directory: server
      #     run: cargo test --verbose --target ${{ matrix.target }}

      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/*.exe artifacts/
          else
            cp target/${{ matrix.target }}/release/* artifacts/
            chmod +x artifacts/*
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: server/artifacts/

      - name: Create Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: server/artifacts/*
          tag_name: v0.1.${{ github.run_number }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
